---
layout: post
title: This Week in Edge Rails
categories:
- edge
author: Mike Gunderloy
published: true
date: 2008-11-14 15:29:00.000000000 +00:00
---
The important news in edge Rails this week is the imminent release of Rails 2.2.1 - otherwise known as Rails 2.2 RC2. Getting ready for this release did lead to some significant changes in the Rails codebase.

First, it's very likely that you'll need to upgrade rubygems to run RC2: the required version of rubygems is now 1.3.1, which was "just released yesterday":http://blog.segment7.net/articles/2008/11/13/rubygems-1-3-1. This dependency is part of the continued work to make vendored gems useful and stable. You may find that updating rubygems is less than smooth, depending on your current version; check out "this article":http://afreshcup.com/2008/10/25/rails-212-and-22rc1-update-your-rubygems/ if you have any trouble. "commit":http://github.com/rails/rails/commit/549b18c9286b6cccf4978093576325fd711dc421

The Rails routing engine has seen some serious work over the past week as well.  For starters, Jeremy Kemper committed several fixes to the core routing engine that cut down on object creation and RegExp creation, trimming memory use. "commit":http://github.com/rails/rails/commit/5db9f9b3ad47fadf0b3f12ada1c2ea7b9c15ded5 "commit":http://github.com/rails/rails/commit/278b6cd9529f33286449a9be18f1903687814d3f There are also new @:only@ and @:except@ options for @map.resources@, which can help cut down memory use if you have a lot of resource routes - see "these":http://ryandaigle.com/articles/2008/11/13/what-s-new-in-edge-rails-except-and-only-routing-options "articles":http://afreshcup.com/2008/11/12/rails-22-change-limited-resource-routes/ for details (though there have been some tweaks in the way nested limited routes work after those were written). "commit":http://github.com/rails/rails/commit/2ecec6052f7f290252a9fd9cc27ec804c7aad36c "commit":http://github.com/rails/rails/commit/4c0921024471c0463d67f8b8fb6a115a94d343aa "commit":http://github.com/rails/rails/commit/44a3009ff068bf080de6764a8c884fbf0ceb920e

The new ActiveRecord connection pooling code has seen some tuning as well, making it more efficient in development model and avoiding some issues with the Oracle adapter. "commit":http://github.com/rails/rails/commit/d20955f889223b6035dbc7d61acba9091bf7b7ed

Polymorphic URLs now behave more intuitively if one of their parameters is nil. For example, a call to @polymorphic_path([@project, @filter, @issue])@ with a nil filter now returns @project_issue_url@ instead of a NoMethodError. "commit":http://github.com/rails/rails/commit/94d6716324126028b89dde886f160474049b1b0c

The request forgery protection feature in Rails has been tightened up so that it only applies to HTML-formatted content requests. There is substantial discussion on the "Lighthouse ticket":http://rails.lighthouseapp.com/projects/8994/tickets/1145-bug-invalidauthenticitytoken-incorrectly-raised-for-xml-controllerdestroy-request that led to this change, but the bottom line is that the old implementation had some bugs, notably making destroy actions inaccessible via XML. Other types of requests are protected by other means - for instance, the same origin policy on AJAX requests substitutes for request forgery protection there. "commit":http://github.com/rails/rails/commit/fbbcd6f29aeccc938b97b5c01717365f8b67912c
