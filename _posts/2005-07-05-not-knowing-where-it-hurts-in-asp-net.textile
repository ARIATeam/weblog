---
layout: post
title: Not knowing where it hurts in ASP.NET
categories:
- praise
author: admin
published: true
date: 2005-07-05 11:55:53.000000000 +01:00
---
Demetrius Nunes is feeling <a href="http://dema.ruby.com.br/articles/2005/07/05/do-yourself-a-favor-get-a-good-framework">the pain of going back to maintenance on an ASP.NET project</a> after spending considerable time in Ruby on Rails. He writes about why there might not be more ASP.NET developers looking around for a replacement. When you don't know where it hurts (or even if it does at all), it's hard to contemplate improvement:

<blockquote>The main problem here is that until you have the actual experience of working with a good framework like Rails to ease your pain, you don&rsquo;t feel the pain at all! Or maybe you do feel it, but you just don&rsquo;t know where it hurts. And to make matters worse, there are very few people that do things differently from you, so you just convince yourself that&rsquo;s just part of the work.

Traditional ASP.NET development means coding everything on your own, following some of the .NET industry &ldquo;best practices&rdquo; promoted mostly by Microsoft &#8211; their blueprint examples all do things &lsquo;traditionally&rsquo;, and then you assume to be the best way to do it. That includes writing stored procedures for every tiny database mangling you need to do and using Datasets and their brothers and sisters for carrying data over the layers, and so on. Object-relational mappers? Who needs them, right? WRONG!</blockquote>

He also recommends a couple of approaches to do if you for some reason have to do ASP.NET and can't do Ruby on Rails. 