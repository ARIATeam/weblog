---
layout: post
title: ! 'Rails for Strut-ters: Dealing with the view'
categories:
- sightings
author: admin
published: true
date: 2005-02-25 18:42:12.000000000 +00:00
---
Brian McCallister is doing an excellent job showing Strut-ters how Rails work by comparing it to their own environment. In <a href="http://kasparov.skife.org/blog/2005/02/25#rails-for-strutters-2">this round</a>, he's taking a look at the oh-horror that is unleashing a real programming language on view logic. He finds that perhaps it's not so bad at all comparing:

<pre>&lt;% for invite in @invitations %>
  ...
&lt;% end %></pre>

...from Rails to the JSP approach of tag libraries with:

<pre>&lt;%@ taglib uri="/tags/struts-logic" prefix="logic" %>
...
&lt;logic:iterate name="invite" property="invitation">
  ...
&lt;/logic:iterate></pre>

Indeed they do look similar. For more on that discussion, read <a href="http://www.loudthinking.com/arc/000405.html">my views on template languages</a> and <a href="http://www.loudthinking.com/arc/000408.html">why the scriplet approach works in Rails</a>.

As a sidenote, I'd like to suggest a few improvements to the tag/value mix that Brian has in his examples. For example, we could convert:

<pre>&lt;form action="<%= url_for :action => 'register', :controller => 'rsvp' %>">  
...
   &lt;input type="text" 
          name="invite_names[&lt;%= slot %>]" 
          length="30"&lt;%= "value='#{@invite.split_names[slot]}'" %>/>
...
</pre>

To use a few more succinct <a href="http://ap.rubyonrails.com/classes/ActionView/Helpers/FormTagHelper.html">FormTagHelper</a> helper methods:

<pre>&lt;%= form_tag :action => 'register', :controller => 'rsvp' %>
...
&lt;%= text_field_tag "invite_names[#{slot}]", @invite.split_names[slot] %></pre>

But that's nitpicking. Brian is doing a fabulous job expressing the unknown in familiar terms. If you're in need for something more visual on the Helpers, see this video demonstrating <a href="http://www.rubyonrails.com/media/video/clips/extracting_helpers.mov">how to create a helper method</a> in Rails.