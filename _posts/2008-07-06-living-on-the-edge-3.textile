---
layout: post
title: ! 'Living on the Edge (or what''s new in Edge Rails) #3'
categories:
- edge
author: Chu Yeow
published: true
date: 2008-07-06 06:32:00.000000000 +01:00
---
There hasn't been much of note in terms of big changes or features in edge Rails lately, so this time I'll leave you to pore over the "Rails commit logs":http://github.com/rails/rails/commits/master for any bug fixes or minor changes that I haven't pointed out. There has been some work in progress with ActionPack refactoring and multithreading work as well as some activity in "ActiveModel":http://github.com/rails/rails/tree/master/activemodel too, but nothing really concrete yet (still very much a work in progress).

As usual, be sure to leave any suggestions and criticisms in the comments.


h4. Thin support with script/server

<code>script/server</code> now checks for the availability of "Thin":http://code.macournoyer.com/thin/ and uses it. Pretty convenient if you are using Thin as your production server (and want to run the same when developing). You'll have to add <code>config.gem 'thin'</code> to your <code>environment.rb</code> first to get this to work.

This patch was contributed by one of the guys at "fluxin":http://fluxin.com/.

"Changeset":http://github.com/rails/rails/commit/a93ea88c0623b4f65af98c0eb55924c335bb3ac1


h4. String#humanize can be customized via inflection rules

The <code>String#humanize</code> core extension method is used convert strings with underscore, usually table column names, in them to pretty readable text. For example,

<pre><code class="ruby">"actor_salary".humanize
=> "Actor salary"
"anime_id".humanize
=> "Anime"</code></pre>

Sometimes this doesn't work out so well though, when you have legacy tables or simply "inhumanely" named column names like "act_sal_money" (which is really "Actor salary", but would be <code>#humanize-d</code> to "Act Sal Money").

You can now specify custom inflection rules (just like you would for plural/singular/irregular/uncountable inflection rules):

<pre><code class="ruby">Inflector.inflections do |inflect|
  inflect.human /_cnt$/, '\1_count'
  inflect.human 'act_sal_money', 'Actor Salary'
end</code></pre>

Notice how you can also use a regular expression above to convert columns like "click_cnt" to "Click count".

Thumbs up to "Dan Manges":http://www.dcmanges.com/ and "Pascal Ehlert":http://rails.lighthouseapp.com/users/19954 for this patch.

"Changeset":http://github.com/rails/rails/commit/4f75840d72b96fff34d65b59480da7d6c7494120


h4. Allow conditions on multiple tables to be specified using hash.

Pratik has committed a tiny (but really useful) change to ActiveRecord that allows you to specify conditions on a joined table in its own hash. An example would explain it better:

<pre><code class="ruby">Anime.all(
  :joins => :character,
  :conditions => {
    :active => true,
    :characters => { :gender => 'female' }
  }
)
</code></pre>

The ActiveRecord query above would find all "active" anime with "female" characters.

"Changeset":http://github.com/rails/rails/commit/cd994eff9a343df376bfaec59de5b24a2ab51256


h4. Outro

That's it for this week's Living on the Edge - do let me know if you like to see more write-ups on even the minor bug fixes and changes that'd I'd left out this week.