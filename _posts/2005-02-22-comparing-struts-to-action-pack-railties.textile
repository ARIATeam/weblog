---
layout: post
title: Comparing Struts to Action Pack/Railties
categories:
- praise
author: admin
published: true
date: 2005-02-22 10:55:49.000000000 +00:00
---
Nicholas Mommaerts is a Java programmer that "...spend[s] 8 hours a day programming with Struts in a big company". After becoming interested enough in Rails to do his blog in it, he also got interested in comparing his work environment to his newfound fun environment. So he went ahead an made a comparison analysis between Struts and Action Pack/Railties available both as a <a href="http://blog.nico-mommaerts.be/blog-files/struts_vs_rails.pdf">PDF</a> and a 4-installment HTML series (<a href="http://blog.nico-mommaerts.be/blog/listCommentsFromPost/16">1</a>, <a href="http://blog.nico-mommaerts.be/blog/listCommentsFromPost/17">2</a>, <a href="http://blog.nico-mommaerts.be/blog/listCommentsFromPost/18">3</a>, <a href="http://blog.nico-mommaerts.be/blog/listCommentsFromPost/19">4</a>).

Do read the full comparison, but here's the conclusion:

<blockquote>Rails eliminates a lot of the boilerplate code we see in a normal web application, it adds just enough to the default stack of web standards to make programming a web application almost enjoyable (or <a href="http://www.loudthinking.com/arc/000255.html">boring</a>). It relies on configuration through convention, but let's you override where needed. It's lean, self-contained, uses only one (great!) language and encourages testing. Rails is flexible because it remains so simple, so unobtrusive.

Struts eliminates boilerplate code only by replacing it with it's own. Struts is a big, fat, hairy monster with which you have to fight constantly when programming. It is very flexible but this comes with such a high cost it makes you wonder if it's worth it.

Rails beats Struts down, kicks it in the groin and leaves Struts crying for it's mama.</blockquote>