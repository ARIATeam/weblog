---
layout: post
title: This Week in Rails (June 26, 2008)
categories:
- general
author: Antonio Cangiano
published: true
date: 2008-06-26 00:45:00.000000000 +01:00
---
Welcome to the second edition of This Week in Rails, a weekly report with highlights from the Rails community.

h4. Ruby Vulnerabilities

As "previously reported":http://weblog.rubyonrails.com/2008/6/21/multiple-ruby-security-vulnerabilities by Jeremy Kemper, serious vulnerabilities have been discovered for the main Ruby implementations. The "official advisory":http://www.ruby-lang.org/en/news/2008/06/20/arbitrary-code-execution-vulnerabilities/ suggests an upgrade path, but there have been several reports of segmentation faults when using Rails with the patched Ruby 1.8.5 and 1.8.6 versions. The Phusion team has published "a patch":http://blog.phusion.nl/assets/r8ee-security-patch-20080623.txt for Ruby 1.8.6-p111, but as things stand now, it hasn't been included by the Ruby core team (yet).

If you are using Rails 2.1, Ruby 1.8.7-p22 seems the way to go. Unfortunately, Ruby 1.8.7 is not compatible with previous versions of Rails. If you decide that it's time to upgrade your applications to Rails 2.1, "this article":http://rails.learnhub.com/lesson/page/2433-upgrading-non-trivial-apps-to-rails-21 features some handy tips, while "this other one":http://giantrobots.thoughtbot.com/2008/6/19/gotchas-when-upgrading-to-rails-2-1 warns you about a few gotchas.

Those of you who're running a version of Ruby that shipped with Mac OS X should wait for the next Apple's Software Update.

h4. Ajax

Rails is opinionated software, but its support for plugins clearly demonstrates a certain openness to diverging opinions on non-core issues. So while most of us mainly use Protoype, it is fairly common to see folks adopting other JavaScript frameworks as well, particularly jQuery.

Last week Jim Neath published "a nice overview":http://jimneath.org/2008/06/18/using-jquery-with-ruby-on-rails/ which compares jQuery with Prototype, and provides information about using jQuery with Rails through the jRails plugin.

Whatever your Ajax framework of choice is, you may be interested in the new "Google Ajax Library API":http://code.google.com/apis/ajaxlibs/ to improve the performance of your applications. Thanks to the tutorial "Using Google Ajax Libraries API with Ruby on Rails":http://www.strictlyuntyped.com/2008/06/using-google-ajax-libraries-api-with.html (soon to be incorporated into a plugin) you can start adopting the API with Rails right now.

h4. MVC

Rails 2.1 adds named scopes, which greatly simplify writing "find logic" within your Active Record models. It's an extremely useful feature which is well explained in this write-up aptly titled, "Named Scopes Are Awesome":http://www.pathf.com/blogs/2008/06/named-scopes-are-awesome/ (we agree). Checkout also Ryan Bates' railscasts on the subject: "named_scope":http://railscasts.com/episodes/108 and "Anonymous Scopes":http://railscasts.com/episodes/112. You may also be interested in this week's railscast about "Caching in Rails 2.1":http://railscasts.com/episodes/115.

Three other compelling Active Record related posts were, "Smart Model, Dumb Controller":http://www.dcmanges.com/blog/smart-model-dumb-controller, "Bulk insertion of data with ActiveRecord":http://rubypond.com/articles/2008/06/18/bulk-insertion-of-data-with-activerecord/ and "Timestamped Migrations":http://blog.stonean.com/2008/06/timestamped-migrations.html on how to make "classic migrations" an available option (see "ticket":http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/446-make-timestamped-migrations-optional#ticket-446-3).

Michael Bleigh published "a tutorial":http://www.intridea.com/2008/6/23/subdomainfu-a-new-way-to-tame-the-subdomain about dealing with subdomains in Rails applications through the SubdomainFu plugin (which appears to be flexible and very straightforward to use).

XP programming practices such as Test-Driven Development are very popular within the Rails community, but there are still many developers who see testing as a chore. Josh Nichols wrote an overview called "A walk through of test-driven development with shoulda":http://technicalpickles.com/posts/a-walk-through-of-test-driven-development-with-shoulda that shows you how easy it is to apply TDD to your Rails projects. In this specific case, he adopted the "Shoulda":http://thoughtbot.com/projects/shoulda plugin which seamlessly adds some assertions, helpers and macros on top of the Test::Unit framework.

h4. Documentation

Aside from "api.rubyonrails.org":http://api.rubyonrails.org there are "many":http://www.railsbrain.com/api/rails-2.1.0/doc/index.html "alternatives":http://gotapi.com for quickly visualizing the documentation of the Rails' API. Last week a new one was launched: "rails-doc.org":http://rails-doc.org. The current version features rapid searches and user annotations. This last feature in particular has the potential to become truly useful.

h4. Deployment

If you are using Apache and mod_rails, you may want to read "this article":http://www.drogomir.com/blog/2008/6/18/upload-progress-bar-with-mod_passenger-and-apache which provides information about a newly released module called "apache-upload-progress":http://github.com/drogus/apache-upload-progress-module/tree/master.

Finally, Jason Crystal wrote a tutorial for "packaging Rails applications for offline use":http://blog.jasoncrystal.com/?p=7 on Mac OS X 10.5.

<br/>

We're done for this week. If you'd like to read more updates from the Ruby side of things, please head over to "This Week in Ruby":http://antoniocangiano.com/2008/06/26/this-week-in-ruby-june-26-2008/.